{"version":3,"sources":["Components/Common/Heading.js","Components/Common/Description.js","Components/Header.js","Components/Body/Cardpage/CardItem.js","Components/Body/Cardpage/CardView.js","Components/Body/Listpage/ListItem.js","Components/Body/Listpage/ListView.js","Components/Container.js","Components/Footer.js","Pages/Home.js","Pages/Towers.js","App.js","registerServiceWorker.js","index.js"],"names":["StyledHeading","styled","Typography","_templateObject","props","primary","bolded","Heading","react_default","a","createElement","Object","assign","variant","text","StyledDescription","Description_templateObject","Description","_ref","StyledHeader","header","Header_templateObject","Header","homeButton","baseUrl","className","es","to","Common_Heading","Common_Description","SvgIcon_default","d","StyledItemContainer","Grid","CardItem_templateObject","StyledItem","Paper","_templateObject2","CardItem","href","item","xs","sm","md","concat","elevation","Typography_default","CardView","content","Grid_default","container","spacing","map","Cardpage_CardItem","key","id","title","link","li","ListItem_templateObject","ListItem","ListItem_StyledItem","target","rel","StyledContent","div","ListView_templateObject","ListView","heading","items","index","Listpage_ListItem","StyledContainer","section","Container_templateObject","Container","Listpage_ListView","dataTowers","towers","Cardpage_CardView","dataCards","homeCards","StyledFooter","footer","Footer_templateObject","Footer","Homepage","Components_Header","Components_Container","Components_Footer","Towers","generateClassName","createGenerateClassName","jss","create","jssPreset","options","insertionPoint","document","getElementById","App","JssProvider_default","Home","path","process","Pages_Towers","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","src_App","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8d5d373e.chunk.js","sourcesContent":["import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\n\n\nconst StyledHeading = styled(Typography)`\n\n  font-size: 3.6rem\n  margin-bottom: 2.1rem\n  color: ${props => props.primary ? \"#fff\" : \"#000\"}\n  font-weight: ${props => props.bolded ? \"500\" : \"400\"}\n  \n  @media (max-width: 600px) {\n    font-size: 2.6rem\n  }\n\n`\n\n\nconst Heading = props =>\n\n    <StyledHeading {...props} variant=\"title\">\n      {props.text}\n    </StyledHeading>\n\n\nexport default Heading\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\n\n\nconst StyledDescription = styled(Typography)`\n\n  font-size: 1.8rem\n  font-weight: 300\n  color: white\n  \n  @media (max-width: 600px) {\n    font-size: 1.6rem\n  }\n\n`\n\n\nconst Description = ({text}) =>\n\n    <StyledDescription variant=\"subheading\">\n      {text}\n    </StyledDescription>\n\n\nexport default Description\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from '@reach/router'\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\n//Components\nimport Heading from './Common/Heading'\nimport Description from \"./Common/Description\";\n\n\nconst StyledHeader = styled.header`\n\n  background: #009F93\n  padding: 5.3rem 0\n  color: white\n  \n  .container {\n    max-width: 96rem\n    margin: 0 auto\n    padding: 0 1.6rem\n    display: flex\n    \n    > a {\n     margin-left: auto\n     align-self: center \n     font-size: 2.6rem\n     color: white\n     display: flex\n     padding: 2rem 0 2rem 2rem\n     align-items: center\n     \n     svg {\n      font-size: 3rem\n      position: relative\n      top: -.1rem\n      margin-right: .7rem\n     }\n    }\n  }\n  \n  @media (max-width: 600px) {\n    padding: 3rem 0\n    \n    .container {\n      text-align: center\n      flex-direction: column\n      \n      > a {\n        font-size: 2rem\n        padding: 2rem 2rem 0 2rem\n        margin-left: 0\n        \n        svg {\n          font-size: 2rem\n        }\n      }\n    }\n  }\n\n`\n\n\nconst Header= ({ homeButton, baseUrl }) =>\n\n  <StyledHeader>\n    <div className='container'>\n      <div>\n        <Link to={baseUrl + '/'}>\n          <Heading bolded=\"true\" primary=\"true\" text=\"HTDB Audio\"/>\n        </Link>\n        <Description text=\"Short description of what the website is about\"/>\n      </div>\n      {homeButton &&\n        <Link to={baseUrl + '/'}>\n          <SvgIcon>\n            <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n          </SvgIcon>\n          Home\n        </Link>\n      }\n    </div>\n  </StyledHeader>\n\n\nexport default Header\n","import React from 'react'\nimport styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport { Link } from '@reach/router'\n\n\nconst StyledItemContainer = styled(Grid)`\n  min-height: 24.2rem\n    \n  @media (max-width:600px) {\n    min-height: 15rem\n  } \n`\n\nconst StyledItem = styled(Paper)`\n\n  text-align: center\n  padding: 5rem 0\n  transition: 0.2s;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  \n  &:hover {\n    background: #009F93\n    \n    h3 {\n     color: white\n    }\n  }\n  \n  h3 {\n    font-size: 2rem\n  }\n  \n  @media (min-width:600px) {\n    padding: 7rem 1rem\n    \n    h3 {\n      font-size: 2.4rem\n    }\n  }\n  \n`\n\nconst CardItem = ({href, text}) =>\n  <StyledItemContainer item xs={12} sm={6} md={4}>\n    <Link to={`${href}`}>\n      <StyledItem elevation={3}>\n        <Typography variant=\"subheading\">{text}</Typography>\n      </StyledItem>\n    </Link>\n  </StyledItemContainer>\n\n\nexport default CardItem","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\n//Components\nimport CardItem from './CardItem'\n\n\nconst CardView = ({content}) => (\n  <Grid container spacing={32}>\n    {content.map((item) => <CardItem key={item.id} text={item.title} href={item.link}/>)}\n  </Grid>\n)\n\n\nexport default CardView","import React from 'react'\nimport styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\n\n\nconst StyledItem = styled.li`\n \n  color: black\n  margin-bottom: 2rem\n  \n  a {\n    padding: 1.3rem 3rem\n    display: block\n  }   \n     \n  h3 {\n    font-size: 2.4rem\n    font-weight: 300\n  }\n    \n  &:nth-child(even) {\n    background: #E5E5E5\n  }\n  \n  &:nth-child(odd) {\n    background: #F4F4F4\n  }\n    \n`\n\n\nconst ListItem = ({href, text}) =>\n    <StyledItem>\n      <a href={`${href}`} target='_blank' rel=\"noopener noreferrer\">\n        <Typography variant=\"subheading\">{text}</Typography>\n      </a>\n    </StyledItem>\n\n\nexport default ListItem","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport styled from 'styled-components'\n\n//Components\nimport Heading from '../../Common/Heading'\nimport ListItem from './ListItem'\n\n\nconst StyledContent = styled.div`\n  padding: 0 1.6rem\n  \n  ul {\n    margin-top: 4rem\n  }\n  \n`\n\n\nconst ListView = ({content}) =>\n  <Grid container spacing={32}>\n    <StyledContent>\n      <Heading text={`${content.heading}`}/>\n      <ul>\n        {content.items.map((item, index) => <ListItem key={index} href={item.link} text={item.title} />)}\n      </ul>\n    </StyledContent>\n  </Grid>\n\n\nexport default ListView","import React from 'react'\nimport styled from 'styled-components'\n\nimport CardView from './Body/Cardpage/CardView'\nimport ListView from  './Body/Listpage/ListView'\n\n\n//Data\nimport dataCards from '../Data/Homepage/homeCards'\nimport dataTowers from '../Data/TowerCategory/towers'\n\n\nconst StyledContainer = styled.section`\n\n  max-width: 96rem\n  margin: 3rem auto\n  width: 100%\n  \n  div{\n    margin:0\n    width:100%\n  }\n\n  @media (min-width:600px) {\n    margin: 5rem auto\n  }\n  \n  @media (min-width:1024px) {\n    margin: 7rem auto\n  }\n }\n`\n\n\nconst Container = ({ content }) => {\n  if(content === 'listView') {\n    return (\n      <StyledContainer>\n        <ListView content={dataTowers.towers}/>\n      </StyledContainer>\n    )\n  } else {\n    return (\n      <StyledContainer>\n        <CardView content={dataCards.homeCards}/>\n      </StyledContainer>\n    )\n  }\n}\n\n\nexport default Container","import React from 'react'\nimport styled from 'styled-components'\n\n//Components\nimport Description from './Common/Description'\n\n\nconst StyledFooter = styled.footer`\n\n  background: #000\n  text-align: center\n  padding: 6.1rem 0\n  \n  & h3 {\n    color: white\n    font-size: 1.8rem\n    font-weight: 300\n  }\n  \n`\n\nconst Footer = () =>\n  <StyledFooter>\n    <Description text=\"© 2016 · HTDB Audio · All rights reserved\"/>\n  </StyledFooter>\n\n\nexport default Footer","import React from 'react'\n\n//Components\nimport Header from '../Components/Header'\nimport Container from '../Components/Container'\nimport Footer from '../Components/Footer'\n\n\nconst Homepage = ({baseUrl}) =>\n  <div>\n    <Header baseUrl={baseUrl}/>\n    <Container content='cardView'/>\n    <Footer/>\n  </div>\n\n\nexport default Homepage","import React from 'react'\n\n//Components\nimport Header from '../Components/Header'\nimport Container from '../Components/Container'\nimport Footer from '../Components/Footer'\n\n\nconst Towers = () =>\n  <div>\n    <Header homeButton/>\n    <Container content='listView'/>\n    <Footer/>\n  </div>\n\n\nexport default Towers","import React from 'react'\nimport { Router } from '@reach/router'\n\n\nimport JssProvider from 'react-jss/lib/JssProvider';\nimport { create } from 'jss';\nimport { createGenerateClassName, jssPreset } from '@material-ui/core/styles'\n\n//Components\nimport Home from './Pages/Home'\nimport Towers from './Pages/Towers'\n\nconst generateClassName = createGenerateClassName()\nconst jss = create(jssPreset())\n// We define a custom insertion point that JSS will look for injecting the styles in the DOM.\njss.options.insertionPoint = document.getElementById('jss-insertion-point')\n\n\nclass App extends React.Component {\n  render() {\n\n    const baseUrl = process.env.PUBLIC_URL;\n\n    return  (\n      <JssProvider jss={jss} generateClassName={generateClassName}>\n\n        <Router>\n          <Home path={baseUrl + '/'} baseUrl={baseUrl}/>\n          <Towers path={baseUrl + '/towers'} />\n        </Router>\n\n      </JssProvider>\n    )\n  }\n}\n\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'typeface-roboto'\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}